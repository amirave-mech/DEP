function insertion_sort(A, n)
    i <- 2
    while (i <= n)
        key <- A[i]
        j <- i-1
        while ((j > 0) and (A[j] > key))
            temp <- j+1
            A[temp] <- A[j]
            j <- j-1
        temp <- j+1
        A[temp] <- key
        i <- i+1

function binary_search_internal(A, l, r, x)
    mid <- floor((l+r)/2)
    if (A[mid] = x)
        return mid
    if (l>=r)
        return -1
    if (A[mid] < x)
        return binary_search_internal(A, mid+1, r, x)
    return binary_search_internal(A, l, mid-1, x)

function binary_search(A, n, x)
    return binary_search_internal(A, 1, n, x)

arr <- [4, 80, 3, 12, 51.3, 69.69]
insertion_sort(arr, 6)
first <- binary_search(arr, 6, 51.3)
print(arr)
print(first)
second <- binary_search(arr, 6, 2)
print(second)
print(log(2,8))